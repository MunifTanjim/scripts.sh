#compdef nc-docker

__nc_docker_compose_file() {
  local dir="$(cat ~/.newscred.yaml | grep 'workspace:' | sed -e 's/workspace:\s*//')"
  dir="${dir/#\~/${HOME}}"
  echo "${dir}/docker-compose.yml"
}

__nc_docker_services() {
  integer ret=1

  _nc_docker_services=($(docker-compose -f $(__nc_docker_compose_file) config --format json | jq -r '.services | keys | .[]'))
  _describe -t services "nc-docker services" _nc_docker_services \
    && ret=0

  return ret
}

__nc_docker_commands() {
  local -a _nc_docker_commands=()
  _nc_docker_commands+=("build" "build-and-push")
  _nc_docker_commands+=("clean" "compose" "configure")
  _nc_docker_commands+=("doctor" "down" "exec" "logs")
  _nc_docker_commands+=("ps" "pull" "push" "restart" "rm")
  _nc_docker_commands+=("shell" "status" "tail" "test")
  _nc_docker_commands+=("up" "update")

  _describe -t nc-docker-commands "commands" _nc_docker_commands
}

__nc_docker_arguments() {
  integer ret=1

  _message "Enter arguments for nc-docker ${words[1]}" && ret=0
  case "${words[$CURRENT]}" in
    -*)
      ;;
    *)
      __nc_docker_services && ret=0
      ;;
  esac

  return ret
}

_nc_docker() {
  setopt localoptions typesetsilent

  local context curcontext="${curcontext}" state state_descr line
  local -A opt_args
  integer ret=1

  _arguments -C \
    '1: :->command' \
    '*:: :->argument' \
    && ret=0

  case "${state}" in
    command)
      __nc_docker_commands && ret=0
      ;;
    argument)
      curcontext="${curcontext%:*}:${words[1]}:"
      __nc_docker_arguments && ret=0
      ;;
  esac

  return ret
}

_nc_docker $@
