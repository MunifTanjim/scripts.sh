#!/usr/bin/env bash

command_exists() {
  type "${1}" >/dev/null 2>&1
}

function_exists() {
  declare -F "${1}" >/dev/null
}

ensure_command() {
  if ! command_exists "${1}"; then
    echo "command not found: ${1}"
    exit 1
  fi
}

ensure_file() {
  if ! [[ -e "${1}" ]]; then
    echo "file not found: ${1}"
    exit 1
  fi
}

config() {
  local -r query="${1}"
  if [[ -z "${ncd_config}" ]]; then
    ensure_file ~/.newscred.yaml
    declare -g ncd_config=$(cat ~/.newscred.yaml | rq --input-yaml | jq -r '.ncd')
  fi
  echo $ncd_config | jq -r "${query}"
}

ncd_config() {
  config $1
}

ncd_ec2_ip() {
  exec aws-ec2-ip $@
}

ncd_npm() {
  local -r domain="newscred"
  local -r domain_owner="304160530156"
  # local -r repo="newscred-npm-package"
  # local -r region="us-east-1"

  local -r ttl=$(( 30 * 60 ))

  if ! npm ping >/dev/null 2>&1; then
    local AWS_CODEARTIFACT_AUTH_TOKEN
    AWS_CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token --duration-seconds "${ttl}" --domain "${domain}" --domain-owner ${domain_owner} --query authorizationToken --output text)
    export AWS_CODEARTIFACT_AUTH_TOKEN
  fi

  npm "$@"
}

ncd() {
  local -r cmd="${1}"
  shift

  if [[ -z "${cmd}" ]]; then
    echo "no command given!"
    exit 1
  fi

  local -r func="ncd_${cmd//:/_}"

  if ! function_exists "${func}"; then
    echo "invalid command: ${cmd}"
    exit 1
  fi

  $func $@
}

ensure_command aws
ensure_command fzf
ensure_command jq
ensure_command rq

ncd $@
